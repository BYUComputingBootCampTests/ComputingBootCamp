I"p<p>Our work will be nearly 100% Linux and so you will want to invest significant time into becoming proficient with Linux.  It is a skill worth much and so you will be benefiting yourself by doing so.</p>

<p>A note: you may have grown up using computers via a GUI.  Linux is different - there may only be two uses for using the built-in Linux GUI:</p>

<ol>
  <li>The menu on the left is useful for holding programs you can click to run (Firefox, New Terminal, ‚Ä¶).</li>
  <li>The icons in the extreme upper right of the window are useful for setting system configurations (so you don‚Äôt have to learn how to do everything from the command line).</li>
</ol>

<p>OK, so we exaggerate, but you get the point‚Ä¶</p>

<h2 id="the-linux-command-shell---bash">The Linux Command Shell - <em>bash</em></h2>
<p>Beyond that you will spend the majority of your time typing things in the command shell.  The default is called <em>bash</em>.</p>

<p>Everything in Linux can be (and usually is) run by shell scripts and commands so learn them.  There are hundreds, start with these at a command prompt:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>man (as in "man man" - show me the manual page for "man" command)
apropos (as in "apropos file" - tell me all the commands that do things with files)
</code></pre></div></div>

<h2 id="linux-links-please-add-to-this-as-you-find-good-stuff">Linux Links (please add to this as you find good stuff)</h2>
<p>Here are some Linux tutorials that may be helpful:</p>
<ul>
  <li>https://ryanstutorials.net/linuxtutorial/</li>
  <li>https://tldp.org/LDP/abs/html/index.html Advanced Bash Scripting Guide</li>
  <li>https://www.grymoire.com/Unix/ Tutorials on awk, sed, grep, make and find</li>
  <li>https://danielmiessler.com/study/vim/ Opinionated tutorial on vim</li>
  <li>https://stackoverflow.com/q/1218390/1220118#1220118 Making vim make sense</li>
  <li>https://blog.sanctum.geek.nz/unix-as-ide-introduction/ How to make Linux tools work together</li>
</ul>

<h2 id="ssh-and-related-commands">ssh and Related Commands</h2>
<p>One of the best ways to communicate with a Linux machine (physical or virtual) is a set of command line programs that are all related.  Here is a quick rundown of the 2 most common ones:</p>

<h3 id="ssh">ssh</h3>
<p>Open a ‚Äúshell‚Äù or command line on a remote machine as in:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh 192.168.52.23  # Specify machine by IP address
ssh bluebell # Specify machine by a name
</code></pre></div></div>

<p>This is how you ‚Äúlog in‚Äù to a remote machine.</p>

<h3 id="scp">scp</h3>
<p>Copy files to and from a remote machine as in:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Copy file1 from my machine to the Downloads directory on another machine
scp file1 student@192.168.52.23:Downloads

# Copy the .bashrc file from remote machine to /tmp on my machine
scp username@hostname:.bashrc /tmp
</code></pre></div></div>

<p>This is how you move files between machines.</p>

<p>The instructions at the bottom of <a href="VirtualMachineCreationInstructions">VirtualMachineCreationInstructions</a> (item 6) can show you how to set it up so that your local machine is trusted by your Linux machine and so you don‚Äôt have to specify your password every time.  And, if your username on your local machine is the same as the remote machine, you don‚Äôt have to specify a username either and can just do:  ‚Äúscp files 192.168.52.23:Downloads‚Äù.</p>

<hr />
<p>Initially created by Brent Nelson, April 2020.</p>
:ET